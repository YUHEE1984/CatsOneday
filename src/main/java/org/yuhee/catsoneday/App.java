/*
 * This source file was generated by the Gradle 'init' task
 */
package org.yuhee.catsoneday;


import org.yuhee.catsoneday.cat.BreedingSexException;
import org.yuhee.catsoneday.cat.Cat;

import java.util.ArrayList;
import java.util.Random;

public class App {


    public String getGreeting() {
        return " Hello Cats <3 ";
    }


    public static void main(String[] args) {

        System.out.println(new App().getGreeting());


		Cat myCat01 = new Cat( null, "Mama", "F", "Egyptian Mau", 1, 1, "silver", "spotted", "gradints of grsy and deep green" );
		// Create a new instance of Cat.

		System.out.println(myCat01.toString());
		// Print out a description of Cat.


		myCat01.setWeightInKg(1);
		// Set the cat's weight.

		System.out.println("Let me repeat cat name in case you forgot it. cat name is " +  myCat01.getName() +
					". And this is a little secret, but cat weight is " + myCat01.getWeightInKg() + " kg.");
		//Get and print out the cat's name and weight.


		myCat01.lieDown();
		myCat01.groom();
		myCat01.loafing();
		myCat01.lookAround();
		myCat01.purr();
		myCat01.stretch();
		myCat01.pounce();
		myCat01.nuzzling();
		myCat01.meowing();
		myCat01.headButting();
		// Cat's action methods.


		Cat myCat02 = new Cat( null, "Fafa", "M", "Egyptian Mau", 1, 1, "cream", "spotted", "gradints of gold and deep blue" );
		System.out.println(myCat02.toString());
		// Create a new instance of Cat.

		myCat02.setWeightInKg(1);
		// Set the cat's weight.

		System.out.println("Let me repeat cat name in case you forgot it. cat name is " +  myCat02.getName() +
					". And this is a little secret, but cat weight is " + myCat02.getWeightInKg() + " kg.");
		//Get and print out the cat's name and weight.


		ArrayList<Cat> kittens;
		// Array variable line to store objects of kittens

		try {
			kittens = myCat01.breed(myCat02);
			// The first cat takes the second cat as a parameter and references the 'breed' method to breed
			// Wrap the code you want to try(breed) in a 'try' block
			// To avoid errors that can occur when variables are uninitialized, separate declaration and initialization
		} catch (BreedingSexException sexException) {
			System.err.println(sexException.getMessage());
			// Catch exception and print error message if two cat objects have the same gender
				return;
		} // Store the result of the breeding attempt in the variable 'kittens'
		  // Use 'return' to abort method execution after an error condition to prevent further exceptions from being thrown

		String[] kittensName = new String[]{"Sava", "jam", "Dal", "Force", "Grog", "Cream"};
		// Declare and initialize a string array to store the kittens' names

		
		for(Cat kitten : kittens) {
			// Assign the Cat objects in 'kittens' to the variable 'kitten' and repeat until all objects have been traversed
			// enhanced for loop

			Random random = new Random();
			String randomName = kittensName[random.nextInt(kittensName.length)];
			kitten.setName(randomName);
			// Randomize the data in 'kittensName', assigning and setting it to each object in 'kittens' while the roop is running

			System.out.println(kitten.toString());
			// Run the 'kitten.toString()' method to print out the new kitten's information
		}
    }
}
